package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"hexago/internal/adapters/handler"
	"hexago/internal/adapters/repository"
	"hexago/internal/core/domain"
	"hexago/internal/core/services"
)

// GetFeatureFlagByName is the resolver for the getFeatureFlagByName field.
func (r *queryResolver) GetFeatureFlagByName(ctx context.Context, args *domain.FeatureFlagInput) (domain.FeatureFlagResponse, error) {
	repo := repository.NewMongoDBRepository("ms-feature-flags-api", "feature-flags")
	srvc := services.NewFeatureFlagService(repo)
	hldr := handler.NewFeatureFlagHandler(*srvc)

	resp := hldr.GetFeatureFlag(args.Name)
	return resp, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
